/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: mercurio22 (https://sketchfab.com/mercurio22)
license: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
source: https://sketchfab.com/3d-models/nike-air-max-90-premium-4b2280c16b67481cba0fe7ffacd77011
title: Nike Air Max 90 Premium
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { OrbitControls, useScroll, Scroll } from "@react-three/drei";
import * as THREE from "three";

const p = (a) => {
  // const res = [...Array(10)].map((_, i) => i * 10);
  if (a < 0.25) {
    return [Math.PI / 2, 0, 0];
  } else if (a < 0.5) {
    return [Math.PI / 4, Math.PI / 2, 0];
  } else {
    return [-Math.PI / 4, 0, Math.PI / 2];
  }
};

export const Shoe = ({ scale, rotation, position, targetRotation }) => {
  const { nodes, materials } = useGLTF("/assets/scene.gltf");
  const scroll = useScroll();
  const ref = useRef();
  const d = 0.01;

  useFrame(() => {
    const a = scroll.range(0, 1);
    const x = p(a);
    ref.current.rotation.x = THREE.MathUtils.damp(
      ref.current.rotation.x,
      x[0],
      4,
      d
    );
    ref.current.rotation.y = THREE.MathUtils.damp(
      ref.current.rotation.y,
      x[1],
      4,
      d
    );
    ref.current.rotation.z = THREE.MathUtils.damp(
      ref.current.rotation.z,
      x[2],
      4,
      d
    );
  });

  return (
    <group
      scale={scale}
      rotation={rotation}
      position={position}
      ref={ref}
      dispose={null}
    >
      <mesh
        castShadow
        geometry={nodes.Base1_Base2_0.geometry}
        material={materials.Base2}
      />
      <mesh
        castShadow
        geometry={nodes.Base1_Logo_0.geometry}
        material={materials.Logo}
      />
      <mesh
        castShadow
        geometry={nodes.Base1_lambert1_0.geometry}
        material={materials.lambert1}
      />
      <mesh
        castShadow
        geometry={nodes.Base1_Cordones_0.geometry}
        material={materials.Cordones}
      />
      <mesh
        castShadow
        geometry={nodes.Base1_Suela_0.geometry}
        material={materials.Suela}
      />
    </group>
  );
};

useGLTF.preload("/assets/scene.gltf");
